- name: Build postgres roles
  set_fact:
    postgres_roles: "{{ postgres_roles | default([]) + [role_item] }}"
  vars:
    role_item:
      name: "{{ item }}-user"
      ensure: present
      login: true
      superuser: false
      passwordSecret:
        name: "{{ item }}-db-credentials"
  loop: "{{ postgres_users }}"

- name: Create S3 credentials secret
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: s3-credentials
        namespace: "{{ openshift_namespace }}"
      stringData:
        AWS_BUCKET_NAME: "{{ secrets[openshift_env].s3.name }}"
        AWS_BUCKET_HOST: "{{ secrets[openshift_env].s3.host }}"
        AWS_ACCESS_KEY_ID: "{{ secrets[openshift_env].s3.access_key_id }}"
        AWS_SECRET_ACCESS_KEY: "{{ secrets[openshift_env].s3.access_key_secret }}"
      type: Opaque

- name: Deploy PostgreSQL cluster
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: postgresql.cnpg.io/v1
      kind: Cluster
      metadata:
        name: postgres-cluster
        namespace: "{{ openshift_namespace }}"
      spec:
        instances: 1
        backup:
          barmanObjectStore:
            destinationPath: "s3://{{ secrets[openshift_env].s3.name }}/{{ openshift_env }}"
            endpointURL: "https://{{ secrets[openshift_env].s3.host }}"
            s3Credentials:
              accessKeyId:
                name: s3-credentials
                key: AWS_ACCESS_KEY_ID
              secretAccessKey:
                name: s3-credentials
                key: AWS_SECRET_ACCESS_KEY
        storage:
          size: "10Gi"
          storageClass: "sopec"
        enableSuperuserAccess: true
        resources:
          requests:
            cpu: "100m"
            memory: "200Mi"
          limits:
            memory: "1Gi"
        managed:
          roles: "{{ postgres_roles }}"
