- name: Create service
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: "{{ app }}-web"
        namespace: "{{ openshift_namespace }}"
      spec:
        selector:
          app: "{{ app }}"
          component: web
        ports:
          - name: "{{ app }}-svc-port"
            protocol: TCP
            port: 80
            targetPort: http

- name: Create Deployment
  kubernetes.core.k8s:
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ app }}-web"
        namespace: "{{ openshift_namespace }}"
      spec:
        replicas: 1
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 1
        selector:
          matchLabels:
            app: "{{ app }}"
            component: web
        template:
          metadata:
            labels:
              app: "{{ app }}"
              component: web
          spec:
            containers:
              - image: "{{ image }}:{{ version }}"
                imagePullPolicy: Always
                name: "{{ app }}-web"
                ports:
                  - containerPort: 8484
                    name: http
                envFrom:
                  - secretRef:
                      name: "{{ app }}-secrets"
                resources:
                  requests:
                    cpu: 10m
                    memory: 64Mi
                  limits:
                    memory: 350Mi
                volumeMounts:
                  - name: grist-data
                    mountPath: /persist
                readinessProbe:
                  tcpSocket:
                    port: 8484
                  initialDelaySeconds: 5
                  timeoutSeconds: 3
                livenessProbe:
                  tcpSocket:
                    port: 8484
                  initialDelaySeconds: 5
                  timeoutSeconds: 3
            imagePullSecrets:
              - name: svc0176-pull-secret
            volumes:
              - name: grist-data
                persistentVolumeClaim:
                  claimName: "{{ app }}-data"

- name: Create route
  kubernetes.core.k8s:
    definition:
      apiVersion: route.openshift.io/v1
      kind: Route
      metadata:
        name: "{{ app }}"
        namespace: "{{ openshift_namespace }}"
        labels:
          app: "{{ app }}"
          route: "public-cf"
      spec:
        host: "{{ subdomain }}{% if openshift_env == 'test' %}-test{% endif %}.{{ domain }}"
        to:
          kind: Service
          name: "{{ app }}-web"
        port:
          targetPort: "{{ app }}-svc-port"
        tls:
          termination: edge
          insecureEdgeTerminationPolicy: Redirect
